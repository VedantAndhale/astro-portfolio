---
import { SEO } from 'astro-seo';

interface Props {
  title: string;
  description: string;
  image?: string;
  article?: boolean;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const { title, description, image = "/open-graph.png", article = false } = Astro.props;

// Construct absolute URL for the image
let imageUrl: string;
if (image.startsWith("http")) {
  imageUrl = image;
} else if (image.startsWith("/")) {
  imageUrl = new URL(image, Astro.site).toString();
} else if (image.startsWith("./")) {
  const currentDir = Astro.url.pathname.replace(/\/[^/]*$/, "/");
  const relativePath = image.substring(2);
  imageUrl = new URL(`${currentDir}${relativePath}`, Astro.site).toString();
} else {
  imageUrl = new URL(`/${image}`, Astro.site).toString();
}
---

<!-- Enhanced SEO -->
<SEO
  title={title}
  description={description}
  openGraph={{
    basic: {
      title,
      type: article ? "article" : "website",
      image: imageUrl,
      url: canonicalURL.toString(),
    },
    optional: {
      description,
      locale: "en_US",
      siteName: "Vedant's Portfolio",
    },
    image: {
      alt: title,
    },
  }}
  twitter={{
    card: "summary_large_image",
    site: "@yourtwitterhandle",
    creator: "@yourtwitterhandle",
    title,
    description,
    image: imageUrl,
    imageAlt: title,
  }}
  extend={{
    meta: [
      { name: "theme-color", content: "#ffffff", media: "(prefers-color-scheme: light)" },
      { name: "theme-color", content: "#0f172a", media: "(prefers-color-scheme: dark)" },
      { name: "apple-mobile-web-app-capable", content: "yes" },
      { name: "apple-mobile-web-app-status-bar-style", content: "default" },
    ],
    link: [
      { rel: "icon", type: "image/svg+xml", href: "/favicon.svg" },
      { rel: "mask-icon", href: "/favicon.svg" },
      { rel: "apple-touch-icon", href: "/apple-touch-icon.png" },
      { rel: "manifest", href: "/manifest.json" },
      { rel: "sitemap", href: "/sitemap-index.xml" },
      { 
        rel: "alternate",
        type: "application/rss+xml",
        title: title,
        href: `${Astro.site}rss.xml`
      },
    ],
  }}
/>

<!-- Resource Hints -->
<link rel="preconnect" href={Astro.site} crossorigin />
<link rel="dns-prefetch" href={Astro.site} />

<!-- Preloaded Assets -->
<link
  rel="preload"
  href="/fonts/atkinson-regular.woff"
  as="font"
  type="font/woff"
  crossorigin
/>
<link
  rel="preload"
  href="/fonts/atkinson-bold.woff"
  as="font"
  type="font/woff"
  crossorigin
/>

<!-- Optimized Scripts -->
<script is:inline type="text/partytown" src="/js/analytics.js"></script>
<script is:inline src="/js/theme.js"></script>
<script is:inline src="/js/scroll.js"></script>

<!-- View Transitions Handler -->
<script>
  import type { TransitionBeforeSwapEvent } from "astro:transitions/client";
  document.addEventListener("astro:before-swap", (e) =>
    [
      ...(e as TransitionBeforeSwapEvent).newDocument.head.querySelectorAll(
        'link[as="font"]',
      ),
    ].forEach((link) => link.remove()),
  );
</script>

<!-- PWA Scripts -->
<script>
  if ('serviceWorker' in navigator) {
    window.addEventListener('load', () => {
      navigator.serviceWorker.register('/sw.js');
    });
  }
</script>
