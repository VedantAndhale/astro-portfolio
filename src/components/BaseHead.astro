---
interface Props {
  title: string;
  description: string;
  image?: string;
}
const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const { title, description, image = "/open-graph.png" } = Astro.props;

// Construct absolute URL for the image
let imageUrl: string;
if (image.startsWith("http")) {
  // Absolute URL
  imageUrl = image;
} else if (image.startsWith("/")) {
  // Site root-relative path
  imageUrl = new URL(image, Astro.site).toString();
} else if (image.startsWith("./")) {
  // Relative path to the current content file
  // Extract the directory from the current pathname
  const currentDir = Astro.url.pathname.replace(/\/[^/]*$/, "/");
  const relativePath = image.substring(2); // Remove './'
  imageUrl = new URL(`${currentDir}${relativePath}`, Astro.site).toString();
} else {
  // Other paths - assume site-relative
  imageUrl = new URL(`/${image}`, Astro.site).toString();
}

// Determine if we're on the homepage to prioritize differently
const isHomepage = Astro.url.pathname === "/" || Astro.url.pathname === "";

// Load the resource loader script
import { readFileSync } from "fs";
import path from "path";
let resourceLoaderScript = "";
try {
  resourceLoaderScript = readFileSync(
    path.join(process.cwd(), "public/js/resource-loader.js"),
    "utf-8",
  );
} catch (error) {
  console.error("Could not load resource-loader.js:", error);
}
---

<!-- Common head tags -->
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link
  rel="icon"
  type="image/svg+xml"
  href={import.meta.env.BASE_URL + "favicon.svg"}
/>
<meta name="generator" content={Astro.generator} />

<!-- Resource hints for performance -->
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
{isHomepage && <link rel="dns-prefetch" href={Astro.site} />}

<!-- Inline resource loader script for optimal loading -->
{resourceLoaderScript && <script is:inline set:html={resourceLoaderScript} />}

<!-- Critical CSS for above-the-fold content - immediately in document head -->
<style is:inline>
  /* Core critical styles to prevent layout shift and flash of unstyled content */
  @font-face {
    font-family: "Atkinson";
    src: url("/fonts/atkinson-regular.woff") format("woff");
    font-weight: 400;
    font-style: normal;
    font-display: swap;
  }

  @font-face {
    font-family: "Atkinson";
    src: url("/fonts/atkinson-bold.woff") format("woff");
    font-weight: 700;
    font-style: normal;
    font-display: swap;
  }

  body {
    margin: 0;
    font-family:
      "Atkinson",
      system-ui,
      -apple-system,
      BlinkMacSystemFont,
      sans-serif;
    -webkit-font-smoothing: antialiased;
    text-rendering: optimizeSpeed;
  }

  html {
    color-scheme: light;
    background-color: white;
  }

  html.dark {
    color-scheme: dark;
    background-color: #0f172a;
  }

  /* Add layout stability hints */
  img,
  picture,
  video,
  canvas,
  svg {
    display: block;
    max-width: 100%;
    height: auto;
  }

  /* Reduce layout shifts */
  main {
    content-visibility: auto;
    contain-intrinsic-size: 1000px;
  }
</style>

<!-- High-priority font preloading with optimized fetch -->
<link
  rel="preload"
  href="/fonts/atkinson-regular.woff"
  as="font"
  type="font/woff"
  crossorigin="anonymous"
  fetchpriority="high"
/>
<link
  rel="preload"
  href="/fonts/atkinson-bold.woff"
  as="font"
  type="font/woff"
  crossorigin="anonymous"
  fetchpriority="high"
/>

<!-- Delay non-critical CSS with immediate fallback for no-JS -->
<link
  rel="stylesheet"
  href="/styles.css"
  media="print"
  onload="this.media='all';this.onload=null;"
  data-priority="low"
/>
<noscript><link rel="stylesheet" href="/styles.css" /></noscript>

<!-- Preload critical assets but with lower priority than fonts -->
{
  isHomepage && (
    <link
      rel="preload"
      href={import.meta.env.BASE_URL + "ui.svg"}
      as="image"
      fetchpriority="low"
    />
  )
}

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(image, Astro.url)} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={new URL(image, Astro.url)} />

<!-- Theme handling optimization - use module for modern browsers -->
<script type="module" src="/js/theme.js"></script>

<!-- Background animation script loaded via resource loader instead -->
<!-- script type="module" src="/js/bg.js" async defer fetchpriority="low"></script -->

<!-- Add priority hints for render-blocking resources -->
<meta
  name="themecolor"
  content="#ffffff"
  media="(prefers-color-scheme: light)"
/>
<meta
  name="themecolor"
  content="#0f172a"
  media="(prefers-color-scheme: dark)"
/>
