---
interface Props {
  title: string;
  description: string;
  image?: string;
}
const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const { title, description, image = "/open-graph.png" } = Astro.props;

// Construct absolute URL for the image
let imageUrl: string;
if (image.startsWith("http")) {
  // Absolute URL
  imageUrl = image;
} else if (image.startsWith("/")) {
  // Site root-relative path
  imageUrl = new URL(image, Astro.site).toString();
} else if (image.startsWith("./")) {
  // Relative path to the current content file
  // Extract the directory from the current pathname
  const currentDir = Astro.url.pathname.replace(/\/[^/]*$/, "/");
  const relativePath = image.substring(2); // Remove './'
  imageUrl = new URL(`${currentDir}${relativePath}`, Astro.site).toString();
} else {
  // Other paths - assume site-relative
  imageUrl = new URL(`/${image}`, Astro.site).toString();
}
---

<!-- Common head tags -->
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link
  rel="icon"
  type="image/svg+xml"
  href={import.meta.env.BASE_URL + "favicon.svg"}
/>
<meta name="generator" content={Astro.generator} />

<!-- LCP detection script - load as early as possible for better mobile performance -->
<script is:inline src="/js/lcp-detection.js"></script>

<!-- Scroll optimization for below-the-fold content -->
<script is:inline>
  // Only load the scroll optimization script on mobile devices
  if (window.innerWidth <= 768) {
    // Add script with defer to not block rendering
    const scrollScript = document.createElement("script");
    scrollScript.src = "/js/scroll.js";
    scrollScript.defer = true;
    document.head.appendChild(scrollScript);
  }
</script>

<!-- Preconnect to any external domains -->
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />

<!-- Critical CSS for above-the-fold content -->
<style is:inline>
  /* Core critical styles to prevent layout shift and flash of unstyled content */
  :root {
    --font-sans: "Inter var", "Plus Jakarta Sans", system-ui, sans-serif;
    --font-display: "Plus Jakarta Sans", "Inter var", system-ui, sans-serif;
    --font-mono: "Fira Code VF", monospace;
  }

  body {
    margin: 0;
    font-family: var(--font-sans), sans-serif;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    text-rendering: optimizeLegibility;
  }

  html {
    color-scheme: light;
    background-color: white;
  }

  html.dark {
    color-scheme: dark;
    background-color: #0f172a;
  }

  /* First contentful paint optimization */
  img,
  picture,
  video,
  canvas,
  svg {
    display: block;
    max-width: 100%;
    height: auto;
  }

  /* Basic layout container styles to avoid layout shift */
  main,
  header,
  footer,
  section,
  article {
    width: 100%;
  }
</style>

<!-- Mobile-critical styles only on mobile devices -->
<script is:inline>
  // Add mobile-critical stylesheet only for mobile devices
  if (window.innerWidth <= 768) {
    const mobileCriticalCSS = document.createElement("link");
    mobileCriticalCSS.rel = "stylesheet";
    mobileCriticalCSS.href = "/styles/mobile-critical.css";
    document.head.appendChild(mobileCriticalCSS);

    // Mark document for CSS targeting
    document.documentElement.setAttribute("data-mobile", "true");
  }
</script>

<!-- Critical resources script for optimizing LCP and Speed Index on mobile -->
<script is:inline src="/js/critical-resources.js"></script>

<!-- Font display optimization -->
<link
  rel="preload"
  as="font"
  href="/fonts/inter-var.woff2"
  type="font/woff2"
  crossorigin
  fetchpriority="high"
/>

<!-- Only preload one critical font on mobile to improve LCP -->
<script>
  // Only load additional fonts on desktop or after main content
  document.addEventListener("DOMContentLoaded", () => {
    if (window.innerWidth > 768) {
      loadAllFonts();
    } else {
      // On mobile, delay loading additional fonts
      setTimeout(loadAllFonts, 3000);
    }
  });

  function loadAllFonts() {
    const additionalFonts = [
      "/fonts/plus-jakarta-sans-var.woff2",
      "/fonts/fira-code-var.woff2",
      "/fonts/atkinson-regular.woff",
      "/fonts/atkinson-bold.woff",
    ];

    additionalFonts.forEach((font) => {
      const link = document.createElement("link");
      link.rel = "preload";
      link.as = "font";
      link.href = font;
      link.type = font.endsWith(".woff2") ? "font/woff2" : "font/woff";
      link.crossOrigin = "anonymous";
      document.head.appendChild(link);
    });
  }
</script>

<!-- Modern typography styles with priority loading only for desktop -->
<script is:inline>
  // Only load non-critical CSS for desktop immediately
  if (window.innerWidth > 768) {
    const modernCSS = document.createElement("link");
    modernCSS.rel = "stylesheet";
    modernCSS.href = "/styles/modern.css";
    document.head.appendChild(modernCSS);
  } else {
    // For mobile, load with delay and low priority
    window.addEventListener("load", () => {
      setTimeout(() => {
        const modernCSS = document.createElement("link");
        modernCSS.rel = "stylesheet";
        modernCSS.href = "/styles/modern.css";
        document.head.appendChild(modernCSS);
      }, 2000);
    });
  }
</script>
<noscript><link rel="stylesheet" href="/styles/modern.css" /></noscript>

<!-- Delay non-critical CSS -->
<link
  rel="stylesheet"
  href="/styles.css"
  media="print"
  onload="this.media='all'"
/>
<noscript><link rel="stylesheet" href="/styles.css" /></noscript>

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(image, Astro.url)} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={new URL(image, Astro.url)} />

<!-- Theme handling with type="module" to prevent render blocking -->
<script type="module" src="/js/theme.js" async></script>

<!-- Load background animation only after page is loaded and idle -->
<script>
  // Add bg script after page loads
  window.addEventListener("load", () => {
    setTimeout(() => {
      const bgScript = document.createElement("script");
      bgScript.src = "/js/bg.js";
      bgScript.async = true;
      bgScript.type = "module";
      document.body.appendChild(bgScript);
    }, 1000);
  });
</script>
