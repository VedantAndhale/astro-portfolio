---
// OptimizedImage.astro - Enhanced image component for dark theme and performance
interface OptimizedImageProps {
  src: string;
  alt: string;
  width: number;
  height: number;
  class?: string;
  loading?: 'lazy' | 'eager';
  decoding?: 'async' | 'sync' | 'auto';
  sizes?: string;
  fetchpriority?: 'high' | 'low' | 'auto';
  critical?: boolean;
  darkModeFilter?: boolean;
}

const {
  src,
  alt,
  width,
  height,
  class: className = '',
  loading = 'lazy',
  decoding = 'async',
  sizes = '(max-width: 640px) 100vw, (max-width: 1024px) 50vw, 33vw',
  fetchpriority = 'auto',
  critical = false,
  darkModeFilter = false,
}: OptimizedImageProps = Astro.props;

// import { Image } from 'astro:assets'; // Keep if needed for future advanced features

// Create dark mode class based on props
const darkModeClass = darkModeFilter ? 'dark-mode-image' : '';

// Explicitly type loadingStrategy
const loadingStrategy: 'lazy' | 'eager' =
  critical || loading === 'eager' ? 'eager' : 'lazy';
const decodingStrategy = loadingStrategy === 'eager' ? 'sync' : decoding;
---

{/* Set all attributes individually */}
<img
  src={src}
  alt={alt}
  width={width}
  height={height}
  class={`${className} ${darkModeClass}`.trim()}
  loading={loadingStrategy}
  decoding={decodingStrategy}
  sizes={sizes}
  fetchpriority={fetchpriority}
/>

{/* Preload link generation logic could be added here if needed */}

<style>
  /* Add any specific styles for the image here */
  img {
    content-visibility: auto;
    max-width: 100%; /* Ensure images are responsive by default */
    height: auto; /* Maintain aspect ratio */
  }
  .dark-mode-image {
    /* Example filter for dark mode */
    filter: brightness(0.9) contrast(1.1);
  }
</style>
