---
import { SITE, LINKS } from "@consts";
import { cn } from "@lib/utils";
const { pathname } = Astro.url;
const subpath = pathname.match(/[^/]+/g);
import Container from "@components/Container.astro";
---

<header id="header" class="fixed top-0 w-full z-50 backdrop-blur-xl">
  <div class="absolute inset-x-0 h-full bg-white/80 dark:bg-gray-950/80 border-b border-gray-200/50 dark:border-gray-800/50"></div>
  <div class="absolute inset-x-0 bottom-0 h-px bg-gradient-to-r from-transparent via-blue-200 dark:via-blue-800/30 to-transparent"></div>

  <Container size="md">
    <div class="relative h-[60px] sm:h-20 w-full flex items-center justify-between">
      <div class="flex items-center">
        <a
          href="/"
          class="group relative flex items-center gap-2 py-2 px-3 sm:px-4 rounded-full border border-gray-200 dark:border-gray-800 bg-white/90 dark:bg-gray-900/90 shadow-sm hover:shadow-md transition-all duration-300 hover:scale-105 overflow-hidden"
        >
          <div class="absolute inset-0 opacity-[0.03] dark:opacity-[0.05]">
            <svg width="100%" height="100%" xmlns="http://www.w3.org/2000/svg">
              <pattern id="dataPattern" width="20" height="20" patternUnits="userSpaceOnUse">
                <circle cx="10" cy="10" r="1" fill="currentColor" class="text-blue-500"></circle>
              </pattern>
              <rect width="100%" height="100%" fill="url(#dataPattern)"></rect>
            </svg>
          </div>

          <span class="relative flex h-3 w-3 sm:h-3 sm:w-3">
            <span class="animate-ping absolute inline-flex h-full w-full rounded-full bg-green-400 opacity-75"></span>
            <span class="relative inline-flex rounded-full h-full w-full bg-green-500 shadow-sm"></span>
          </span>

          <span class="relative text-sm sm:text-sm font-medium text-gray-700 dark:text-gray-300 group-hover:text-transparent bg-clip-text group-hover:bg-gradient-to-r group-hover:from-blue-600 group-hover:to-indigo-600 dark:group-hover:from-blue-400 dark:group-hover:to-indigo-400 transition-all duration-300">
            Open to work
          </span>
        </a>
      </div>

      <nav class="hidden md:flex items-center justify-center gap-1">
        {
          LINKS.map((LINK) => (
            <a
              href={LINK.HREF}
              class={cn(
                "text-sm font-medium",
                "h-9 rounded-full px-3", // Reduced horizontal padding from px-4 to px-3
                "flex items-center justify-center",
                "transition-all duration-300",
                pathname === LINK.HREF || "/" + subpath?.[0] === LINK.HREF
                  ? "bg-gradient-to-r from-blue-600 via-indigo-600 to-violet-600 text-white shadow-sm"
                  : "text-gray-700 dark:text-gray-300 hover:bg-gradient-to-r hover:from-gray-50 hover:to-gray-100 dark:hover:from-gray-800/30 dark:hover:to-gray-800/50 hover:text-gray-900 dark:hover:text-white hover:shadow-sm",
              )}
            >
              {LINK.TEXT}
            </a>
          ))
        }
      </nav>

      <div class="flex items-center gap-2">
        <a
          href="/search"
          aria-label={`Search blog posts and projects on ${SITE.TITLE}`}
          class={cn(
            "hidden md:flex",
            "w-8 sm:w-10 h-8 sm:h-10 rounded-full items-center justify-center",
            "bg-white/90 dark:bg-gray-900/90",
            "border border-gray-200 dark:border-gray-800",
            "text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400",
            "shadow-sm hover:shadow-md transition-all duration-300 hover:scale-110",
            pathname === "/search" || "/" + subpath?.[0] === "/search"
              ? "pointer-events-none bg-gradient-to-r from-blue-600 to-indigo-600 text-white border-0"
              : "",
          )}
        >
          <svg class="w-5 sm:w-5 h-5 sm:h-5 stroke-current">
            <use href="/ui.svg#search"></use>
          </svg>
        </a>

        <button
          id="header-theme-button"
          aria-label="Toggle light and dark theme"
          class={cn(
            "hidden md:flex",
            "w-8 sm:w-10 h-8 sm:h-10 rounded-full items-center justify-center",
            "bg-white/90 dark:bg-gray-900/90",
            "border border-gray-200 dark:border-gray-800",
            "text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400",
            "shadow-sm hover:shadow-md transition-all duration-300 hover:scale-110 hover:rotate-12",
          )}
        >
          <svg class="w-5 sm:w-5 h-5 sm:h-5 stroke-current block dark:hidden">
            <use href="/ui.svg#sun"></use>
          </svg>
          <svg class="w-5 sm:w-5 h-5 sm:h-5 stroke-current hidden dark:block">
            <use href="/ui.svg#moon"></use>
          </svg>
        </button>

        <button
          id="header-drawer-button"
          aria-label="Toggle menu"
          class={cn(
            "flex md:hidden",
            "w-11 h-11 rounded-full items-center justify-center", // Increased size for mobile
            "bg-white/90 dark:bg-gray-900/90",
            "border border-gray-200 dark:border-gray-800",
            "text-gray-700 dark:text-gray-300",
            "shadow-sm hover:shadow-md transition-all duration-300 hover:scale-110",
          )}
        >
          <svg id="drawer-open" class="w-6 h-6 stroke-current">
            <use href="/ui.svg#menu"></use>
          </svg>
          <svg id="drawer-close" class="w-6 h-6 stroke-current">
            <use href="/ui.svg#x"></use>
          </svg>
        </button>
      </div>
    </div>
  </Container>
</header>

<style>
  #header-drawer-button > #drawer-open {
    @apply block transition-transform duration-300;
  }
  #header-drawer-button > #drawer-close {
    @apply hidden transition-transform duration-300;
  }
  #header-drawer-button.open > #drawer-open {
    @apply hidden;
  }
  #header-drawer-button.open > #drawer-close {
    @apply block;
  }

  #header {
    @apply transition-all duration-300;
  }
  #header.scrolled {
    @apply shadow-md;
  }
  #header.scrolled .border-b {
    @apply opacity-100;
  }
  #header:not(.scrolled) .border-b {
    @apply opacity-0;
  }
</style>

<script is:inline>
  function toggleDrawer() {
    const drawer = document.getElementById("drawer");
    const drawerButton = document.getElementById("header-drawer-button");
    drawer?.classList.toggle("open");
    drawerButton?.classList.toggle("open");
  }

  function initializeDrawerButton() {
    const drawerButton = document.getElementById("header-drawer-button");
    drawerButton?.addEventListener("click", toggleDrawer);
  }

  function handleScroll() {
    const header = document.getElementById("header");
    if (window.scrollY > 50) {
      header?.classList.add("scrolled");
    } else {
      header?.classList.remove("scrolled");
    }
  }

  window.addEventListener("scroll", handleScroll);
  document.addEventListener("astro:after-swap", () => {
    initializeDrawerButton();
    handleScroll();
  });

  initializeDrawerButton();
  handleScroll();
</script>
