---
import { SITE, LINKS } from '@consts';
import { cn } from '@lib/utils';
import { Image } from 'astro:assets';
const { pathname } = Astro.url;
const subpath = pathname.match(/[^/]+/g);
---

<div
  id="drawer"
  class="safe-top safe-bottom fixed inset-0 z-40 flex h-0 flex-col items-center justify-center overflow-hidden bg-white transition-all duration-500 ease-out dark:bg-gray-950"
>
  <div
    class="absolute inset-0 bg-white/90 backdrop-blur-xl dark:bg-gray-950/90"
  >
  </div>

  <div
    class="relative z-10 flex w-full max-w-md flex-col items-center justify-center gap-8 px-6"
  >
    <a
      href="/"
      class="group flex items-center gap-3 transition-transform hover:scale-105"
      aria-label="Home page"
    >
      <div
        class="h-14 w-14 overflow-hidden rounded-full border border-gray-200 dark:border-gray-800"
      >
        <Image
          src="/brand.png"
          alt={SITE.TITLE}
          width={56}
          height={56}
          loading="eager"
          class="h-full w-full object-cover"
        />
      </div>
      <span
        class="bg-gradient-to-r from-blue-600 to-indigo-600 bg-clip-text text-xl font-semibold text-transparent dark:from-blue-400 dark:to-indigo-400"
      >
        {SITE.TITLE}
      </span>
    </a>

    <nav
      class="flex w-full flex-col items-center gap-4"
      aria-label="Mobile navigation"
    >
      {
        LINKS.map((LINK) => (
          <a
            href={LINK.HREF}
            class={cn(
              'flex w-full justify-center rounded-xl px-6 py-4 text-lg font-medium transition-all duration-300',
              pathname === LINK.HREF || '/' + subpath?.[0] === LINK.HREF
                ? 'bg-gradient-to-r from-blue-600 to-indigo-600 text-white shadow-md'
                : 'border border-gray-200 bg-white/50 text-gray-700 hover:scale-105 hover:shadow-md dark:border-gray-800 dark:bg-gray-900/50 dark:text-gray-300'
            )}
          >
            {LINK.TEXT}
          </a>
        ))
      }
    </nav>

    <div class="flex gap-4">
      <button
        id="drawer-search-button"
        aria-label={`Search blog posts and projects on ${SITE.TITLE}`}
        class={cn(
          'flex items-center justify-center w-14 h-14 rounded-xl',
          'bg-white/80 dark:bg-gray-900/80 border border-gray-200 dark:border-gray-800',
          'text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400',
          'shadow-sm hover:shadow-md transition-all duration-300 hover:scale-105'
        )}
      >
        <svg class="h-4 w-4 stroke-current">
          <title>Search</title>
          <use href={import.meta.env.BASE_URL + 'ui.svg#search'}></use>
        </svg>
      </button>

      <a
        href="/rss.xml"
        target="_blank"
        aria-label={`RSS feed for ${SITE.TITLE}`}
        class="flex h-14 w-14 items-center justify-center rounded-xl border border-gray-200 bg-white/80 text-gray-700 shadow-sm transition-all duration-300 hover:scale-105 hover:text-blue-600 hover:shadow-md dark:border-gray-800 dark:bg-gray-900/80 dark:text-gray-300 dark:hover:text-blue-400"
      >
        <svg class="h-4 w-4 stroke-current">
          <title>RSS</title>
          <use href={import.meta.env.BASE_URL + 'ui.svg#rss'}></use>
        </svg>
      </a>

      <button
        id="drawer-theme-button"
        aria-label="Toggle light and dark theme"
        class="flex h-14 w-14 items-center justify-center rounded-xl border border-gray-200 bg-white/80 text-gray-700 shadow-sm transition-all duration-300 hover:scale-105 hover:text-blue-600 hover:shadow-md dark:border-gray-800 dark:bg-gray-900/80 dark:text-gray-300 dark:hover:text-blue-400"
      >
        <svg class="block h-4 w-4 stroke-current dark:hidden">
          <title>Light mode</title>
          <use href={import.meta.env.BASE_URL + 'ui.svg#sun'}></use>
        </svg>
        <svg class="hidden h-4 w-4 stroke-current dark:block">
          <title>Dark mode</title>
          <use href={import.meta.env.BASE_URL + 'ui.svg#moon'}></use>
        </svg>
      </button>
    </div>
  </div>
</div>

<style>
  #drawer {
    transform: translateY(20px);
    opacity: 0;
    visibility: hidden;
  }

  #drawer.open {
    @apply h-full;
    transform: translateY(0);
    opacity: 1;
    visibility: visible;
  }

  .safe-top {
    padding-top: env(safe-area-inset-top);
  }

  .safe-bottom {
    padding-bottom: env(safe-area-inset-bottom);
  }
</style>

<script is:inline>
  function initializeDrawerSearchButton() {
    const searchButton = document.getElementById('drawer-search-button');
    const drawer = document.getElementById('drawer');

    searchButton?.addEventListener('click', () => {
      // Close the drawer first
      drawer?.classList.remove('open');
      // Then trigger the search
      setTimeout(() => {
        window.dispatchEvent(
          new KeyboardEvent('keydown', {
            key: 'k',
            metaKey: true,
          })
        );
      }, 300); // Wait for drawer close animation
    });
  }

  document.addEventListener('astro:after-swap', initializeDrawerSearchButton);
  initializeDrawerSearchButton();
</script>
