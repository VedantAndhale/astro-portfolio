---
import { SITE, LINKS } from "@consts";
import { cn } from "@lib/utils";
import { Image } from "astro:assets";
const { pathname } = Astro.url;
const subpath = pathname.match(/[^/]+/g);
---

<div
  id="drawer"
  class="fixed inset-0 h-0 z-40 overflow-hidden flex flex-col items-center justify-center bg-white dark:bg-gray-950 transition-all duration-500 ease-out safe-top safe-bottom"
>
  <div
    class="absolute inset-0 backdrop-blur-xl bg-white/90 dark:bg-gray-950/90"
  >
  </div>

  <div
    class="relative z-10 flex flex-col items-center justify-center gap-8 w-full max-w-md px-6"
  >
    <a
      href="/"
      class="flex items-center gap-3 group hover:scale-105 transition-transform"
      aria-label="Home page"
    >
      <div
        class="w-14 h-14 rounded-full overflow-hidden border border-gray-200 dark:border-gray-800"
      >
        <Image
          src="/brand.png"
          alt={SITE.TITLE}
          width={56}
          height={56}
          loading="eager"
          class="w-full h-full object-cover"
        />
      </div>
      <span
        class="text-xl font-semibold bg-clip-text text-transparent bg-gradient-to-r from-blue-600 to-indigo-600 dark:from-blue-400 dark:to-indigo-400"
      >
        {SITE.TITLE}
      </span>
    </a>

    <nav
      class="flex flex-col items-center gap-4 w-full"
      aria-label="Mobile navigation"
    >
      {
        LINKS.map((LINK) => (
          <a
            href={LINK.HREF}
            class={cn(
              "w-full py-4 px-6 rounded-xl flex justify-center font-medium text-lg transition-all duration-300",
              pathname === LINK.HREF || "/" + subpath?.[0] === LINK.HREF
                ? "bg-gradient-to-r from-blue-600 to-indigo-600 text-white shadow-md"
                : "bg-white/50 dark:bg-gray-900/50 border border-gray-200 dark:border-gray-800 text-gray-700 dark:text-gray-300 hover:scale-105 hover:shadow-md",
            )}
          >
            {LINK.TEXT}
          </a>
        ))
      }
    </nav>

    <div class="flex gap-4">
      <button
        id="drawer-search-button"
        aria-label={`Search blog posts and projects on ${SITE.TITLE}`}
        class={cn(
          "flex items-center justify-center w-14 h-14 rounded-xl",
          "bg-white/80 dark:bg-gray-900/80 border border-gray-200 dark:border-gray-800",
          "text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400",
          "shadow-sm hover:shadow-md transition-all duration-300 hover:scale-105",
        )}
      >
        <svg class="w-6 h-6 stroke-current">
          <title>Search</title>
          <use href="/ui.svg#search"></use>
        </svg>
      </button>

      <a
        href="/rss.xml"
        target="_blank"
        aria-label={`RSS feed for ${SITE.TITLE}`}
        class="flex items-center justify-center w-14 h-14 rounded-xl bg-white/80 dark:bg-gray-900/80 border border-gray-200 dark:border-gray-800 text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 shadow-sm hover:shadow-md transition-all duration-300 hover:scale-105"
      >
        <svg class="w-6 h-6 stroke-current">
          <title>RSS Feed</title>
          <use href="/ui.svg#rss"></use>
        </svg>
      </a>

      <button
        id="drawer-theme-button"
        aria-label="Toggle light and dark theme"
        class="flex items-center justify-center w-14 h-14 rounded-xl bg-white/80 dark:bg-gray-900/80 border border-gray-200 dark:border-gray-800 text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 shadow-sm hover:shadow-md transition-all duration-300 hover:scale-105"
      >
        <svg class="w-6 h-6 stroke-current dark:hidden">
          <title>Light mode</title>
          <use href="/ui.svg#sun"></use>
        </svg>
        <svg class="w-6 h-6 stroke-current hidden dark:block">
          <title>Dark mode</title>
          <use href="/ui.svg#moon"></use>
        </svg>
      </button>
    </div>
  </div>
</div>

<style>
  #drawer {
    transform: translateY(20px);
    opacity: 0;
    visibility: hidden;
  }

  #drawer.open {
    @apply h-full;
    transform: translateY(0);
    opacity: 1;
    visibility: visible;
  }

  .safe-top {
    padding-top: env(safe-area-inset-top);
  }

  .safe-bottom {
    padding-bottom: env(safe-area-inset-bottom);
  }
</style>

<script is:inline>
  function initializeDrawerSearchButton() {
    const searchButton = document.getElementById("drawer-search-button");
    const drawer = document.getElementById("drawer");

    searchButton?.addEventListener("click", () => {
      // Close the drawer first
      drawer?.classList.remove("open");
      // Then trigger the search
      setTimeout(() => {
        window.dispatchEvent(
          new KeyboardEvent("keydown", {
            key: "k",
            metaKey: true,
          }),
        );
      }, 300); // Wait for drawer close animation
    });
  }

  document.addEventListener("astro:after-swap", initializeDrawerSearchButton);
  initializeDrawerSearchButton();
</script>
