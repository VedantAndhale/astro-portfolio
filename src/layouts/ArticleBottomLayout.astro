---
import { type CollectionEntry, getCollection } from 'astro:content';
// Remove TocDrawer import if not used elsewhere
// import TocDrawer from '@components/toc/TocDrawer.astro';

type Props = {
  entry: CollectionEntry<'blog'> | CollectionEntry<'projects'>;
  // Remove headings prop if not used
  // headings?: { depth: number; slug: string; text: string }[];
};

// Get the requested entry
const { entry } = Astro.props;
const { collection } = entry; // Re-add collection definition

// Get the next and prev entries
const items = (await getCollection(collection))
  .filter((post: CollectionEntry<typeof collection>) => !post.data.draft)
  .sort(
    (
      a: CollectionEntry<typeof collection>,
      b: CollectionEntry<typeof collection>
    ) => b.data.date.getTime() - a.data.date.getTime()
  );
const index = items.findIndex(
  (x: CollectionEntry<typeof collection>) => x.slug === entry.slug
);

// Set prev/next without wrapping around
const prev = index > 0 ? items[index - 1] : null;
const next = index < items.length - 1 ? items[index + 1] : null;
---

<div class="relative">
  {/* Content area with enhanced styling */}
  <div
    class="relative mb-12 overflow-hidden rounded-2xl border border-gray-200 bg-white/80 p-8 shadow-xl backdrop-blur-md dark:border-gray-800 dark:bg-gray-900/80 md:p-10"
  >
    {/* Premium decorative elements */}
    <div
      class="absolute -right-24 -top-24 h-48 w-48 rounded-full bg-blue-100/50 blur-3xl dark:bg-blue-900/20"
    >
    </div>
    <div
      class="absolute -bottom-24 -left-24 h-48 w-48 rounded-full bg-indigo-100/50 blur-3xl dark:bg-indigo-900/20"
    >
    </div>

    {/* Reading progress indicator */}
    <div class="absolute left-0 top-0 h-1 w-full bg-gray-200 dark:bg-gray-800">
      <div
        id="reading-progress"
        class="h-full w-0 bg-gradient-to-r from-blue-600 to-indigo-600"
      >
      </div>
    </div>

    <div class="relative flex flex-col overflow-hidden lg:flex-row">
      <div class="w-full flex-grow">
        {/* Remove the <article> wrapper and the <Content /> render */}
        {/* The actual content is rendered via <slot /> in ContentLayout */}
      </div>
    </div>

    {/* Tags if available */}
    {
      entry.data.tags && entry.data.tags.length > 0 && (
        <div class="mb-12 rounded-2xl border border-gray-200 bg-white/80 p-6 shadow-lg backdrop-blur-xl dark:border-gray-800 dark:bg-gray-900/80">
          <h3 class="mb-4 flex items-center gap-2 text-lg font-semibold text-gray-900 dark:text-white">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
              class="h-5 w-5 text-blue-600 dark:text-blue-400"
            >
              <path d="M20.59 13.41l-7.17 7.17a2 2 0 0 1-2.83 0L2 12V2h10l8.59 8.59a2 2 0 0 1 0 2.82z" />
              <line x1="7" y1="7" x2="7.01" y2="7" />
            </svg>
            Tags
          </h3>
          <div class="flex flex-wrap gap-2">
            {entry.data.tags.map((tag: string) => (
              <a
                href={`/${collection}?tag=${tag}`}
                class="inline-flex items-center rounded-md border border-blue-100 bg-blue-50 px-2 py-1 text-xs font-medium text-blue-600 transition-colors hover:bg-blue-100 dark:border-blue-800/50 dark:bg-blue-900/30 dark:text-blue-400 dark:hover:bg-blue-900/50"
              >
                {tag}
              </a>
            ))}
          </div>
        </div>
      )
    }

    {/* Previous/Next navigation - enhanced styling */}
    {
      (prev || next) && (
        <nav class="mb-12 grid grid-cols-1 gap-6 sm:grid-cols-2">
          {prev ? (
            <a
              href={`/${prev.collection}/${prev.slug}`}
              class="group relative flex flex-col overflow-hidden rounded-xl border border-gray-200 bg-white/80 p-6 shadow-md backdrop-blur-md transition-all duration-300 hover:-translate-y-1 hover:shadow-xl dark:border-gray-800 dark:bg-gray-900/80"
            >
              <div class="absolute left-0 top-0 h-full w-1.5 rounded-l-full bg-gradient-to-b from-blue-600 to-indigo-600" />
              <div class="mb-2 flex items-center pl-2 text-xs font-medium uppercase tracking-wider text-gray-500 dark:text-gray-400">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  class="mr-1 h-4 w-4 transition-transform duration-300 group-hover:-translate-x-1"
                >
                  <polyline points="15 18 9 12 15 6" />
                </svg>
                Previous Article
              </div>
              <h4 class="pl-2 text-base font-semibold text-gray-900 transition-colors group-hover:text-blue-600 dark:text-white dark:group-hover:text-blue-400">
                {prev.data.title}
              </h4>
            </a>
          ) : (
            <>
              {' '}
              {/* Wrap empty div in fragment to satisfy JSX syntax */}
              <div class="hidden sm:block" />
            </>
          )}
          {next && (
            <a
              href={`/${next.collection}/${next.slug}`}
              class="group relative flex flex-col justify-end overflow-hidden rounded-xl border border-gray-200 bg-white/80 p-6 text-right shadow-md backdrop-blur-md transition-all duration-300 hover:-translate-y-1 hover:shadow-xl dark:border-gray-800 dark:bg-gray-900/80"
            >
              <div class="absolute right-0 top-0 h-full w-1.5 rounded-r-full bg-gradient-to-b from-blue-600 to-indigo-600" />
              <div class="mb-2 flex items-center justify-end pr-2 text-xs font-medium uppercase tracking-wider text-gray-500 dark:text-gray-400">
                Next Article
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  class="ml-1 h-4 w-4 transition-transform duration-300 group-hover:translate-x-1"
                >
                  <polyline points="9 18 15 12 9 6" />
                </svg>
              </div>
              <h4 class="pr-2 text-base font-semibold text-gray-900 transition-colors group-hover:text-blue-600 dark:text-white dark:group-hover:text-blue-400">
                {next.data.title}
              </h4>
            </a>
          )}
        </nav>
      )
    }

    {/* Enhanced share section */}
    <div
      class="relative mt-12 overflow-hidden rounded-2xl border border-gray-200 bg-white/80 p-8 text-center shadow-lg backdrop-blur-md dark:border-gray-800 dark:bg-gray-900/80"
    >
      {/* Subtle decorative element */}
      <div
        class="absolute -right-12 -top-12 h-24 w-24 rounded-full bg-blue-100/50 blur-2xl dark:bg-blue-900/20"
      >
      </div>

      <h3
        class="relative z-10 mb-3 text-xl font-semibold text-gray-900 dark:text-white"
        id="share-heading"
      >
        Enjoyed this article?
      </h3>
      <p
        class="relative z-10 mx-auto mb-6 max-w-md text-sm text-gray-600 dark:text-gray-400"
      >
        If you found this content valuable, consider sharing it with others who
        might benefit from it.
      </p>
      <div class="relative z-10 flex justify-center gap-4">
        <a
          href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(entry.data.title)}&url=${encodeURIComponent(`${Astro.url.origin}/${collection}/${entry.slug}`)}`}
          target="_blank"
          rel="noopener noreferrer"
          class="flex h-12 w-12 items-center justify-center rounded-full bg-[#1DA1F2]/10 text-[#1DA1F2] shadow-sm transition-all duration-300 hover:scale-110 hover:bg-[#1DA1F2]/20 hover:shadow-md"
          aria-label="Share on Twitter"
        >
          <svg
            class="h-5 w-5"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 512 512"
            fill="currentColor"
          >
            <path
              d="M389.2 48h70.6L305.6 224.2 487 464H345L233.7 318.6 106.5 464H35.8L200.7 275.5 26.8 48H172.4L272.9 180.9 389.2 48zM364.4 421.8h39.1L151.1 88h-42L364.4 421.8z"
            ></path>
          </svg>
        </a>
        <a
          href={`https://www.linkedin.com/shareArticle?mini=true&url=${encodeURIComponent(`${Astro.url.origin}/${collection}/${entry.slug}`)}&title=${encodeURIComponent(entry.data.title)}`}
          target="_blank"
          rel="noopener noreferrer"
          class="flex h-12 w-12 items-center justify-center rounded-full bg-[#0A66C2]/10 text-[#0A66C2] shadow-sm transition-all duration-300 hover:scale-110 hover:bg-[#0A66C2]/20 hover:shadow-md"
          aria-label="Share on LinkedIn"
        >
          <svg
            class="h-5 w-5"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
            fill="currentColor"
          >
            <path
              d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"
            ></path>
          </svg>
        </a>
        <a
          href={`https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(`${Astro.url.origin}/${collection}/${entry.slug}`)}`}
          target="_blank"
          rel="noopener noreferrer"
          class="flex h-12 w-12 items-center justify-center rounded-full bg-[#1877F2]/10 text-[#1877F2] shadow-sm transition-all duration-300 hover:scale-110 hover:bg-[#1877F2]/20 hover:shadow-md"
          aria-label="Share on Facebook"
        >
          <svg
            class="h-5 w-5"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
            fill="currentColor"
          >
            <path
              d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"
            ></path>
          </svg>
        </a>
      </div>
    </div>

    {/* Giscus comment section */}
    <div
      class="relative mt-12 overflow-hidden rounded-2xl border border-gray-200 bg-white/80 p-8 text-center shadow-lg backdrop-blur-md dark:border-gray-800 dark:bg-gray-900/80"
    >
      <div
        class="absolute -right-12 -top-12 h-24 w-24 rounded-full bg-blue-100/50 blur-2xl dark:bg-blue-900/20"
      >
      </div>
      <h3
        class="relative z-10 mb-3 text-xl font-semibold text-gray-900 dark:text-white"
        id="comments-heading"
      >
        Comments
      </h3>
      <div class="relative z-10" aria-labelledby="comments-heading">
        <script
          is:inline
          src="https://giscus.app/client.js"
          data-repo="vedantandhale/VedantAndhale"
          data-repo-id="R_kgDOIjd3zw"
          data-category="General"
          data-category-id="DIC_kwDOIjd3z84CoGb5"
          data-mapping="pathname"
          data-strict="0"
          data-reactions-enabled="1"
          data-emit-metadata="0"
          data-input-position="top"
          data-theme="light"
          data-lang="en"
          data-loading="lazy"
          crossorigin="anonymous"
          async></script>
      </div>
    </div>
  </div>

  <script>
    // Reading Progress Indicator
    const progressBar = document.getElementById('reading-progress');
    const article = document.querySelector('article');

    if (progressBar && article) {
      window.addEventListener('scroll', () => {
        const winScroll =
          document.body.scrollTop || document.documentElement.scrollTop;
        const articleBox = article.getBoundingClientRect();
        const articleStart = articleBox.top + winScroll - 100;
        const articleHeight = articleBox.height;
        const scrolled = ((winScroll - articleStart) / articleHeight) * 100;

        if (scrolled < 0) {
          progressBar.style.width = '0%';
        } else if (scrolled > 100) {
          progressBar.style.width = '100%';
        } else {
          progressBar.style.width = scrolled + '%';
        }
      });
    }

    // Table of Contents
    const tocContainer = document.getElementById('toc');
    const headings = article?.querySelectorAll('h2, h3');

    if (tocContainer && headings && headings.length > 0) {
      const toc = document.createDocumentFragment();

      headings.forEach((heading, index) => {
        // Add ID to each heading if it doesn't have one
        if (!heading.id) {
          heading.id = 'section-' + index;
        }

        const isH3 = heading.tagName === 'H3';
        const link = document.createElement('a');
        link.href = '#' + heading.id;
        link.textContent = heading.textContent;
        link.className = isH3
          ? 'block text-gray-600 dark:text-gray-400 mb-2 ml-3 pl-2 border-l border-gray-300 dark:border-gray-700 hover:text-blue-600 dark:hover:text-blue-400 transition-colors'
          : 'block text-gray-800 dark:text-gray-200 font-medium mb-2 hover:text-blue-600 dark:hover:text-blue-400 transition-colors';

        toc.appendChild(link);
      });

      tocContainer.appendChild(toc);
    } else if (tocContainer) {
      // If no headings found, hide TOC
      document.getElementById('toc-container')?.classList.add('hidden');
    }

    // Set Giscus theme based on system preference
    const giscusScript = document.querySelector(
      'script[src="https://giscus.app/client.js"]'
    );
    const setGiscusTheme = () => {
      const theme = window.matchMedia('(prefers-color-scheme: dark)').matches
        ? 'dark'
        : 'light';
      giscusScript?.setAttribute('data-theme', theme);
      // Reload the Giscus iframe to apply the new theme
      const iframe = document.querySelector(
        'iframe.giscus-frame'
      ) as HTMLIFrameElement;
      if (iframe?.contentWindow) {
        iframe.contentWindow.postMessage(
          { giscus: { setConfig: { theme } } },
          'https://giscus.app'
        );
      }
    };

    if (giscusScript) {
      setGiscusTheme();
      window
        .matchMedia('(prefers-color-scheme: dark)')
        .addEventListener('change', setGiscusTheme);
    }

    // Add an event listener for theme toggle
    const themeToggleHandler = (newTheme: string) => {
      const iframe = document.querySelector(
        'iframe.giscus-frame'
      ) as HTMLIFrameElement;
      if (iframe?.contentWindow) {
        iframe.contentWindow.postMessage(
          { giscus: { setConfig: { theme: newTheme } } },
          'https://giscus.app'
        );
      }
    };

    // Assuming there's a global event or function to detect theme toggle
    window.addEventListener('themeToggle', (event) => {
      const customEvent = event as CustomEvent;
      const newTheme = customEvent.detail.theme; // Assuming the new theme is passed in the event detail
      themeToggleHandler(newTheme);
    });

    // Ensure Giscus theme is set on page load
    const applyGiscusThemeOnLoad = () => {
      const storedTheme = localStorage.getItem('theme');
      const systemPrefersDark = window.matchMedia(
        '(prefers-color-scheme: dark)'
      ).matches;
      const theme = storedTheme || (systemPrefersDark ? 'dark' : 'light');

      const iframe = document.querySelector(
        'iframe.giscus-frame'
      ) as HTMLIFrameElement;
      if (iframe?.contentWindow) {
        iframe.contentWindow.postMessage(
          { giscus: { setConfig: { theme } } },
          'https://giscus.app'
        );
      }
    };

    // Apply theme on page load
    applyGiscusThemeOnLoad();
  </script>
</div>
